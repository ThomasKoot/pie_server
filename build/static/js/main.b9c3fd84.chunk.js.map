{"version":3,"sources":["components/HeaderComponent.js","shared/defaults.js","functions/animatePieChart.js","components/PieLabelComponent.js","components/CanvasComponent.js","components/DataInputComponent.js","components/FooterComponent.js","functions/convertUserInput.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","defaultColorMap","animatePieChart","Math","PI","context","state","animationState","setAnimationState","x","canvas","width","devicePixelRatio","y","height","radius","now","performance","console","log","clearCanvas","r","cx","timestamp","length","finished","save","scale","window","phase","beginPath","arc","lineTo","fillStyle","fill","restore","animatedCircle","data","angle","forEach","e","i","startAngle","min","arcLength","color","animatedPieSlices","drawPieChart","undefined","clearRect","displayDots","dotSpacing","dotSize","translate","rotate","j","pushCoordinates","ctx","canvasWidth","canvasHeight","PieLabel","props","React","useState","selected","setSelected","isFinished","RenderLabels","fontSize","textBoxWidth","textDist","map","style","top","max","textY","isDisplay","textAngle","left","textX","textAlign","key","name","onMouseMove","evt","cancelAnimationFrame","requestId","current","selectedSlice","getContext","rect","getBoundingClientRect","mousePos","clientX","clientY","closePath","isPointInPath","callPie","Canvas","setCanvasWidth","setCanvasHeight","ref","useRef","animationPhase","setAnimationPhase","value","resizeCanvas","parentElement","offsetWidth","useEffect","addEventListener","removeEventListener","render","requestAnimationFrame","setIsFinished","id","t","pushAmount","isContinue","mult","lower","upper","focusPieChart","RenderForms","handleNameUpdate","newError","target","match","field","message","setErr","newState","err","filter","push","userInput","fields","setUserInput","handleValueUpdate","removeEntry","newErrors","isErrorClassName","input_field","placeholder","ph","type","onChange","aria-label","aria-hidden","onClick","AppendEntry","paddingBottom","newIdCounter","idCounter","newFields","concat","toString","formattedData","f","Number","generatePie","DataInput","Footer","convertUserInput","fullCircle","total","reduce","a","c","cos","sin","newElement","Main","setData","isAnimationFinished","setIsAnimationFinished","App","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b9c3fd84.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <div className=\"header mb-2 mb-md-5\">\n            <h2>INTERACTIVE PIE-CHART</h2>\n        </div>\n    )\n\n}\n\nexport default Header;","export const defaultColorMap = [\n    \"#CEAC41\",\n    \"rgb(50, 168, 113)\",\n    \"rgb(168, 50, 50)\",\n    \"#DAC27C\",\n    \"rgb(50, 168, 168)\",\n    \"#A8651E\",\n    \"#8DA229\",\n    \"#FF8882\",\n    \"#543855\",\n    \"#105160\"\n\n\n\n]\n\nexport const fullCircle = 2 * Math.PI;\nexport const canvasWindowRatio = 1;\nexport const canvasWidth = 600;\nexport const canvasHeight = 400;\nexport const radiusRatio = 0.25;\nexport const textBoxRatio = .2;\nexport const fontRatio = .03; \nexport const textDistRatio = .07;\nexport const pushRatio = 0.015;\nexport const circlePhaseLength = 1000;\nexport const piePhaseLength = 1000;\nexport const canvasRatio = 2/3;\nexport const dotSpacingRatio = 0.02;\n\n","\nimport { defaultColorMap, \n    radiusRatio, pushRatio, circlePhaseLength, piePhaseLength, dotSpacingRatio } from '../shared/defaults'\n\nconst animatedCircle = (x, y, r, cx, timestamp, now, length, finished) => {\n\n    //animation of a gray circle. provides an optional callback 'finished' when the animation is finished.\n\n    cx.save();\n    cx.scale(window.devicePixelRatio, window.devicePixelRatio);    \n    let phase = (now - timestamp) / length;\n    phase = phase >= 1 ? 1 : phase;\n    cx.beginPath();\n    cx.arc(x, y, r, -0.5*Math.PI, -0.5*Math.PI + phase * 2*Math.PI);\n    cx.lineTo(x, y)\n    cx.fillStyle = \"rgb(240, 240, 240)\"\n    cx.fill();\n    if (phase >= 1) {\n        finished(\"animatedCircle\")\n    }\n    cx.restore();\n}\n\nconst animatedPieSlices = (x, y, r, cx, timestamp, now, length, data, finished) => {\n\n    //animation of a pie chart. Data should provide the following values:\n    //color - startAngle - arcLength. \n\n    cx.save();\n    cx.scale(window.devicePixelRatio, window.devicePixelRatio);    \n\n    let phase = (now - timestamp) / length;\n    phase = phase >= 1 ? 1 : phase;\n    let angle = -0.5 * Math.PI + 2 * Math.PI * phase\n\n    data.forEach((e, i) => {\n        if (angle < e.startAngle) {return}\n        cx.beginPath();\n        cx.arc(x, y, r, e.startAngle, Math.min(angle, e.startAngle + e.arcLength));\n        cx.lineTo(x , y);\n        cx.fillStyle = e.color\n        cx.fill();\n    })\n\n    if (phase >= 1) {\n        finished(\"animatedPieSlices\")\n    }\n\n    cx.restore();\n}\n\nexport const animatePieChart = (context, state, animationState, setAnimationState) => {\n\n    let x = context.canvas.width/2/devicePixelRatio;\n    let y = context.canvas.height/2/devicePixelRatio;\n    const radius = context.canvas.width/devicePixelRatio*radiusRatio\n\n    let now = performance.now();\n    console.log(animationState)\n\n    if (animationState === \"init\") {\n        clearCanvas(context, setAnimationState)\n    } else if (animationState === \"clearCanvas\") {\n        animatedCircle(x, y, radius, context, state.timestamp, now, circlePhaseLength, setAnimationState);\n    } else if (animationState === \"animatedCircle\") {\n        animatedPieSlices(x, y, radius, context, state.timestamp + circlePhaseLength, \n            now, piePhaseLength, state.data, setAnimationState)\n    } else if (animationState === \"animatedPieSlices\" ) {\n        drawPieChart(x, y, radius, context, state.data, setAnimationState)\n    }\n\n}\n\nconst drawPieChart = (x, y, r, cx, data, finished = undefined) => {\n    cx.save();\n    cx.scale(window.devicePixelRatio, window.devicePixelRatio);    \n    cx.clearRect(0, 0, cx.canvas.width/devicePixelRatio, cx.canvas.height/devicePixelRatio);\n\n    data.forEach((e, i) => {\n        if (e.arcLength === 0) {return}\n        cx.beginPath();\n        cx.arc(x, y, r, e.startAngle, e.startAngle + e.arcLength);\n        cx.lineTo(x , y);\n        cx.fillStyle = e.color;\n        cx.fill();\n\n        let displayDots = false\n\n        if (e.arcLength < 0.3) {\n            if (i !== 0 && data[i-1].arcLength < 0.3) {\n                displayDots = true;\n            } else if (i <= data.length - 2 && data[i+1].arcLength < 0.3) {\n                displayDots = true;\n            }\n        }\n        \n        if (displayDots) {\n            const canvasWidth = cx.canvas.width/devicePixelRatio\n            let dotSpacing =  canvasWidth * dotSpacingRatio;\n            let dotSize = dotSpacing / 5;\n            cx.save();\n            cx.translate(x, y);\n            cx.rotate(e.startAngle);\n            for (let j = 0; j < 3; j++) {\n                cx.beginPath()\n                cx.arc(e.pushCoordinates.x * (r + dotSpacing + (dotSpacing * j)),\n                    e.pushCoordinates.y * (r + dotSpacing + (dotSpacing * j)), \n                    dotSize, 0, 2*Math.PI);\n                cx.fill()\n            }\n            cx.restore();\n        }\n    })\n    cx.restore();\n    if(finished) {finished(\"finished\")};\n\n}\n\nexport const focusPieChart = (cx, data, selectedSlice = undefined) => {\n    const canvasWidth = cx.canvas.width/devicePixelRatio;\n    const canvasHeight = cx.canvas.height/devicePixelRatio;\n    const radius = cx.canvas.width/devicePixelRatio * radiusRatio;\n    const pushAmount = canvasWidth * pushRatio;\n\n    cx.save();\n    cx.scale(window.devicePixelRatio, window.devicePixelRatio);    \n\n    cx.clearRect(0, 0, canvasWidth, canvasHeight);\n    \n    let isContinue = false;\n\n        data.forEach((e, i) => {\n            if (e.arcLength === 0) {return}\n\n            if (i === selectedSlice) {\n                e.mult += 0.05\n                e.mult = e.mult <= 1 ? e.mult : 1\n            } else {\n                e.mult -=0.05;\n                e.mult = e.mult >= 0 ? e.mult : 0\n            }\n            if (e.mult !== 0 && e.mult !== 1) {isContinue = true}\n            cx.save();\n            cx.translate(canvasWidth/2, canvasHeight/2);\n            cx.rotate(e.startAngle);\n            cx.beginPath();\n            if (i === selectedSlice) {\n                cx.arc(e.pushCoordinates.x * e.mult**.5 * pushAmount, e.pushCoordinates.y * e.mult**.5 * pushAmount ,radius, 0, e.arcLength);\n                cx.lineTo(e.pushCoordinates.x * e.mult**.5 * pushAmount, e.pushCoordinates.y * e.mult**.5 * pushAmount)\n            } else {\n                cx.arc(e.pushCoordinates.x * e.mult**2 * pushAmount, e.pushCoordinates.y * e.mult**2 * pushAmount ,radius, 0, e.arcLength);\n                cx.lineTo(e.pushCoordinates.x * e.mult**2 * pushAmount, e.pushCoordinates.y * e.mult**2 * pushAmount)\n            }\n            cx.closePath();\n            cx.fillStyle = defaultColorMap[i]\n            cx.fill()\n\n            let displayDots = {lower: false, upper: false}\n\n            if (e.arcLength < 0.3 && i !== selectedSlice) {\n                if (i !== 0 && data[i-1].arcLength < 0.3) {\n                    displayDots.lower = true;\n                } else if (i <= data.length - 2 && data[i+1].arcLength < 0.3) {\n                    displayDots.upper = true;\n                }\n            }\n\n            if (displayDots.lower || displayDots.upper) {\n                let dotSpacing = canvasWidth * dotSpacingRatio;\n                let dotSize = dotSpacing / 5;\n                for (let x = 0; x < 3; x++) {\n                    cx.beginPath()\n                    cx.arc(e.pushCoordinates.x * (radius + dotSpacing * (x+1)),\n                        e.pushCoordinates.y * (radius + dotSpacing * (x+1)), \n                        dotSize, 0, 2*Math.PI)\n                    if (selectedSlice === undefined) {\n                        cx.fill()\n                    } else if (selectedSlice === i) {\n                        cx.closePath()\n                    } else if (selectedSlice === i - 1 && displayDots.lower) {\n                        cx.closePath()\n                    } else if (selectedSlice === i + 1 && displayDots.upper) {\n                        cx.closePath() \n                    } else {\n                        cx.fillStyle = \"rgba(200, 200, 200, 0.8)\"\n                        cx.fill()\n                    }\n                }            \n            }\n\n            cx.restore() \n        })\n        cx.restore() \n    return isContinue\n}\n\nconst clearCanvas = (ctx, finished) => {\n\n    const canvasWidth = ctx.canvas.width/devicePixelRatio;\n    const canvasHeight = ctx.canvas.height/devicePixelRatio;\n\n    ctx.save();\n    ctx.scale(window.devicePixelRatio, window.devicePixelRatio);    \n\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    ctx.restore();\n    finished(\"clearCanvas\")\n\n}","import React from 'react'\nimport { fontRatio, textBoxRatio, radiusRatio } from '../shared/defaults'\n\nconst PieLabel = (props) => {\n\n    const canvasWidth = props.width;\n    const canvasHeight = props.height;\n    \n    const [selected, setSelected] = React.useState(undefined)\n\n    if(props.isFinished === false) {return <></>}\n    \n    const onMouseMove = (evt) => {\n\n        if(!props.isFinished) {return}\n       \n        cancelAnimationFrame(props.requestId.current) \n        \n        let canvas = props.canvas.current;\n        let ctx = canvas.getContext('2d');\n        let selectedSlice;\n        \n        ctx.restore();\n        ctx.save();\n        ctx.scale(devicePixelRatio, devicePixelRatio);\n\n        let rect = canvas.getBoundingClientRect()\n        let mousePos = { x:evt.clientX - rect.left, y:evt.clientY - rect.top}\n    \n        props.data.data.forEach((e, i) => {\n            ctx.beginPath();\n            ctx.arc(canvasWidth/2, canvasHeight/2, canvasWidth*radiusRatio, e.startAngle, e.startAngle + e.arcLength);\n            ctx.lineTo(canvasWidth/2, canvasHeight/2);\n            ctx.closePath();\n            if (ctx.isPointInPath(mousePos.x * window.devicePixelRatio, mousePos.y*window.devicePixelRatio)) {\n                selectedSlice = i\n            } \n        })\n        setSelected(selectedSlice);\n        ctx.restore();\n        props.callPie(ctx, selectedSlice);\n    }\n\n    const RenderLabels = () => {\n        const fontSize = canvasWidth * fontRatio;\n        const textBoxWidth = canvasWidth * textBoxRatio;\n        const radius = canvasWidth * radiusRatio\n        const textDist = canvasWidth * 0.05;\n       \n        return(\n\n            props.data.data.map((e, i) => {\n\n                let style = {fontSize: fontSize, \n                    top: Math.max(e.textY * (radius + textDist) + canvasHeight/2 - fontSize, 2) + 10,\n                    color: e.color};\n                let isDisplay = true;\n\n                if (e.textAngle > 0.5*Math.PI) {\n                    style = {...style, \n                        left: e.textX * (radius + textDist) + canvasWidth/2 - textBoxWidth + 10, \n                        textAlign: \"right\", \n                        width: \"\" + textBoxWidth + \"px\"}\n                } else {\n                    style = {...style, left: e.textX * (radius + textDist) + canvasWidth/2.1 +15}\n                }\n\n                if (e.arcLength < 0.3 && i !== selected) {\n                    if (i !== 0 && props.data.data[i-1].arcLength < 0.3) {\n                        isDisplay = false;\n                    } else if (i <= props.data.data.length - 2 && props.data.data[i+1].arcLength < 0.3) {\n                        isDisplay = false;   \n                    }\n                }\n\n                if (selected !== undefined && selected !== i) {\n                    style.color = \"rgba(200, 200, 200, 0.8)\"\n                } \n                \n                return (\n                    <div className=\"floating_label_container\" key={e.startAngle} \n                        style={{width: props.width, height: props.height}}>\n                        <p className={\"label_text\"} style={style}>\n                            {isDisplay ? e.name : \"\"}\n                        </p>\n                    </div>\n                )\n            })\n        )\n    }\n    \n    return(\n        \n        <div className=\"canvas_overlay\" style={{width: \"\" + canvasWidth + \"px\",\n        height: \"\" + canvasHeight + \"px\"}} onMouseMove={onMouseMove}>\n            <RenderLabels />\n        </div>\n    )\n\n        \n}\n\nexport default PieLabel","import React from 'react';\nimport { useRef, useEffect } from 'react';\nimport { animatePieChart, focusPieChart } from '../functions/animatePieChart'\nimport { canvasRatio, canvasWindowRatio } from '../shared/defaults'\nimport PieLabels from './PieLabelComponent'\n\nconst Canvas = (props) => {\n\n    // The canvas component animates the drawing of a pie chart, and focusses on\n    // a selected slice if applicable. The canvas width is set as a ratio of the containing div width. \n    // The other sizes are ratios of the canvasWidth. \n\n    const [canvasWidth, setCanvasWidth] = React.useState(undefined)\n    const [canvasHeight, setCanvasHeight] = React.useState(undefined)\n\n    let ref = useRef();                             //canvas ref\n    let requestId = useRef();                      \n    let animationPhase = useRef(undefined);         //animation phase is a ref since changing it's value should not trigger a rerender. \n\n    const setAnimationPhase = (value) => {\n        animationPhase.current = value\n    }\n\n    const resizeCanvas = () => {\n        let width = (ref.current.parentElement.offsetWidth)/canvasWindowRatio;\n        setCanvasWidth(width)\n        setCanvasHeight(width * canvasRatio)\n        if (animationPhase.current === \"finished\") {\n            animatePieChart(ref.current.getContext('2d'), props.data, \"animatedPieSlices\") \n        }\n    }\n\n    useEffect(() => resizeCanvas(),[]) //size the canvas on load.\n\n    useEffect(() => {\n        window.addEventListener('resize', resizeCanvas)\n        return (() => window.removeEventListener('resize', resizeCanvas))      \n    })\n\n    useEffect((() => { \n          cancelAnimationFrame(requestId.current);\n          setAnimationPhase(\"init\");\n    }), [props.data])\n\n    useEffect(() => {\n        \n        if(!props.data || props.isFinished) {return}\n\n        const render = () => {\n            let ctx = ref.current.getContext('2d');\n            ctx.restore();\n\n            animatePieChart(ctx, props.data, animationPhase.current, setAnimationPhase) \n            if (animationPhase.current !== \"finished\") {\n                requestId.current = requestAnimationFrame(render);\n            } else{\n                props.setIsFinished(true);\n            }\n        }\n\n        render();\n\n        return ( () => cancelAnimationFrame(requestId.current))\n    });\n\n    const callPie = (ctx, selectedSlice) => {\n\n        //calls the function that focusses on the selected slice of a pie chart. Latches to the next animation frame\n\n        const render = (t) => {\n            if (t === undefined) {\n                requestId.current = requestAnimationFrame(render)\n                ctx.restore();\n            } else {\n                requestId.current = requestAnimationFrame(render)\n                let isContinue = focusPieChart(ctx,props.data.data,selectedSlice)\n                if (!isContinue) {cancelAnimationFrame(requestId.current)}\n            }    \n        }\n        render();\n\n        return ( () => cancelAnimationFrame(requestId.current))\n    }\n\n    return(\n        <div className=\"col-md-8\" id=\"taart\">\n            <div className=\"canvas_container radiusbox\">\n                \n            <canvas ref={ref} width={canvasWidth * window.devicePixelRatio} \n            height={canvasHeight * window.devicePixelRatio} \n            style={{width: \"\" + canvasWidth + \"px\", height: \"\" + canvasHeight + \"px\"}}\n            />\n\n            <PieLabels width={canvasWidth} height={canvasHeight} data={props.data}  \n                    canvas={ref}\n                    requestId={requestId}\n                    callPie={callPie}\n                    isFinished={props.isFinished}\n                    />\n            </div>\n        </div> \n    )\n}\n\nexport default Canvas;","import React from 'react';\n\nconst RenderForms = (props) => {\n\n    const handleNameUpdate = (e => {\n        \n        let newError = null\n\n        if (e.target.value.length > 15) {\n            newError = {  \n                id: e.target.id.match(/\\d+/)[0], \n                field: \"name_input\", \n                message: \"max 15 char\"\n            }\n        }\n\n        props.setErr( (() => {\n            let newState = [...props.err];\n            newState = newState.filter(x => (!!x) && \"name_input\" + x.id !== e.target.id)\n            if (newError) {newState.push(newError)}\n            return newState\n        })())\n\n        let newState = {\n            ...props.userInput,\n            fields: props.userInput.fields.map(field => {\n                if (\"name_input\" + field.id === e.target.id) {\n                    let newField = {...field, name: e.target.value}\n                    return newField;\n                } else {\n                    return field\n                }\n            })}\n        props.setUserInput(newState)\n    })\n\n    const handleValueUpdate = e => { \n        \n        let newError = null\n\n        if (!e.target.value.match(/^\\d+$/) && e.target.value !== \"\") {\n            newError = {  \n                id: e.target.id.match(/\\d+/)[0], \n                field: \"value_input\", \n                message: \"input must be digits\"\n            }\n        }\n\n        props.setErr( (() => {\n            let newState = [...props.err];\n            newState = newState.filter(x => (!!x) && \"value_input\" + x.id !== e.target.id)\n            if (newError) {newState.push(newError)}\n            return newState\n        })())\n\n        let newState = {\n            ...props.userInput,\n            fields: props.userInput.fields.map(field => {\n                if (\"value_input\" + field.id === e.target.id) {\n                    let newField = {...field, value: e.target.value}\n                    return newField;\n                } else {\n                    return field\n                }\n            })}\n        props.setUserInput(newState)\n    }\n    \n\n    const removeEntry = e => {\n        let newState = {...props.userInput,\n            fields: props.userInput.fields.filter(field => field.id !== e.target.id.match(/\\d+$/)[0])}\n        props.setUserInput(newState)\n        \n        let newErrors = [...props.err]\n        newErrors = newErrors.filter(x => x.id !== e.target.id.match(/\\d+$/)[0])\n        props.setErr(newErrors)\n    }\n\n    return (\n        props.userInput.fields.map((e, i) => {\n            \n            const isErrorClassName = (input_field) => {\n                \n                if (!props.err) {return}\n                \n                let match = props.err.filter(x => x.id === e.id)\n                if (!match) {return} \n\n                for (let x of match) {\n                    if (input_field === x.field) {\n                        return \" is-invalid\"\n                    }\n                }\n            }\n\n\n            const placeholder = (ph) => {\n                if (i === 0) {\n                    return ph\n                } else {\n                    return \"\"\n                }\n            }\n            \n            return (\n                <div key={\"data_input_field\" + e.id}>\n                    <div>\n                        <div className=\"form-row mt-2\">\n                            <div className=\"col-6\" >\n                                <input type=\"text\" className={\"form-control form-control-sm\" + isErrorClassName(\"name_input\")} \n                                name=\"name_input\" id={\"name_input\" + e.id} \n                                value={e.name} onChange={handleNameUpdate}\n                                placeholder={placeholder(\"name\")}/>\n                                <div className=\"invalid-feedback\">max 15 char.</div>\n                            </div>\n                            <div className=\"col-5\">\n                                <input type=\"text\" className={\"form-control form-control-sm\" + isErrorClassName(\"value_input\")}  name=\"value_input\" id={\"value_input\" + e.id} \n                                value={e.value} onChange={handleValueUpdate} placeholder={placeholder(\"value\")}\n                                />\n                                <div className=\"invalid-feedback\">only numbers</div>\n                            </div>\n                            <div className=\"col-1 mt-1\">\n                                <button type=\"button\" className=\"close\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\" onClick={removeEntry} id={\"remove_entry\" + e.id}>&times;</span>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    ))\n}\n\nconst AppendEntry = (props) => {\n\n    const handleAppend = () => {\n        let newIdCounter = props.userInput.idCounter + 1;\n        let newFields = props.userInput.fields.concat({value: \"\", name: \"\", id: newIdCounter.toString()})\n        let newState = {\n            idCounter: newIdCounter,\n            fields: newFields,\n        }\n        props.setUserInput(newState)\n    }\n\n    const dispatchGenerate = () => {\n        if (props.err.length !== 0) {\n            console.log(\"can't generate pie\")\n            return\n        }\n        const formattedData = props.userInput.fields.map(f => ({...f, value: Number(f.value)}))\n        props.generatePie(formattedData)\n    }\n\n    return(\n        <div className=\"form-row mt-2\" style={{paddingBottom: \"10px\"}}>\n            <div className=\"col-6\">\n                <button type=\"button\" className=\"btn btn-outline append-button\" onClick={handleAppend}>append</button>\n            </div>\n            <div className=\"col-6\">\n                <button type=\"button\" className=\"btn btn-outline generate-button float-left\" onClick={dispatchGenerate}>generate</button>\n            </div>\n        </div>\n    )\n}\n\nconst DataInput = (props) => {\n\n    const [userInput, setUserInput] = React.useState(\n        {\n            idCounter: 3,\n            fields: [\n                {name: \"\", value: \"\", id: \"0\"},\n                {name: \"\", value: \"\", id: \"1\"},\n                {name: \"\", value: \"\", id: \"2\"},\n            ]\n        }\n    )\n\n    const [err, setErr] = React.useState([])\n\n    return (\n        <div className=\"col-md-4\">\n            <div className=\"data_input_container\">\n                <div >\n                    <form>\n                        <RenderForms userInput={userInput} setUserInput={setUserInput} err={err} setErr={setErr}/>\n                    </form>\n                </div>\n                <AppendEntry userInput={userInput} setUserInput={setUserInput} \n                    generatePie={props.generatePie} err={err} />\n            </div>\n        </div>\n    )\n}\n\nexport default DataInput;","import React from 'react';\n\nconst Footer = (props) => {\n    return (\n    <div className= \"mt-2 mt-md-4\">\n        <div className=\"footer\">   \n                <p className=\"footer-text\">{\"Programming & Design by Thomas Koot\"} <br></br> {\"www.thomascode.nl\"}</p>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;\n","import { defaultColorMap } from '../shared/defaults';\n\nconst convertUserInput = (userInput) => {\n    let convertedData = []\n    const fullCircle = Math.PI * 2\n    let angle = -.5 * Math.PI;\n    \n    const total = userInput.reduce((a, c) => a + c.value, 0);\n\n    convertedData = userInput.map((e, i) => {\n        const arcLength = e.value/total*fullCircle;\n        const textAngle = angle + arcLength / 2;\n        const textAlign = textAngle > 0.5 * Math.PI ? \"end\" : \"start\";\n        const textX = Math.cos(textAngle);\n        const textY = Math.sin(textAngle);\n        const pushCoordinates = {x: Math.cos(arcLength/2), y: Math.sin(arcLength/2)}\n        let newElement = {...e, \n            startAngle: angle, \n            arcLength, \n            textAngle, textAlign, textX, textY, \n            color: defaultColorMap[i], \n            mult: 0, \n            pushCoordinates\n            };\n        angle += arcLength\n        \n        return newElement\n    })\n    return {data: convertedData, timestamp: performance.now()}\n}\n\nexport default convertUserInput","import React from 'react';\nimport Header from './HeaderComponent';\nimport Canvas from './CanvasComponent';\nimport DataInput from './DataInputComponent';\nimport Footer from './FooterComponent';\nimport convertUserInput from '../functions/convertUserInput';\n\nconst Main = () => {\n\n    const [data, setData] = React.useState(null)\n    const [isAnimationFinished, setIsAnimationFinished] = React.useState(false)\n    \n    const generatePie = (userInput) => {\n        setData(convertUserInput(userInput))\n        setIsAnimationFinished(false)\n    }\n\n    return (\n        <div className=\"container\"> \n            <Header />\n                <div className=\"row row-content\">\n                    <DataInput generatePie={generatePie}/>\n                    <Canvas data={data} isFinished={isAnimationFinished} setIsFinished={setIsAnimationFinished}/>\n                </div>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport Main from './components/MainComponent'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}